TPS 1:)

1.) 0x00004020 for text and 0x10010000 for data
2.) there are new terms, like ori and lui in the basic code. this is not in the source code.
3.) Therere are 32 bits in between each adress.
4.) 8 columns. 
5.) 32 is divisible by 8?
6.) by doing m:	.word 20.
7.) 0x10010000 in the value+4 slot.
8.) The string was already set in the code. str1: .asciiz "I love CSE31!"
9.) It's stored in the same adress, but the data is reversed (little endian?) so that you need to read it from left to right per column, but read each column from right to left.
10.) yes.
11.) 	li $v0, 4
	la $a0, str1
	syscall
12.) la means load adress. basically you can put a variable you created into a register so syscall can print it.

TPS 2:)

1.) They have them. It's just they are composite operations.
2.) ok
3.) ok
4.) li $v0, 5 # $v0 will contain the integer read.
	syscall
5.) ok
6.) ok
7.) ok
8.) ok